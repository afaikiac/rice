#!/usr/bin/env bash

set -euo pipefail

print() {
	printf "%s\n" "$@" &>/dev/tty
}

log() {
	printf "%s\n" "[$(basename "$0")] $1" &>/dev/tty
}

die() {
	log "$@"
	exit 1
}

is_timestamped() {
	[[ "$1" =~ \.[[:alnum:]]+$ ]] && [[ "$1" =~ [[:digit:]]{4}\-[[:digit:]]{2}\-[[:digit:]]{2}\-[[:digit:]]{6}(\.[[:alnum:]]+)$ ]]
}

timestamp() {
	local extension="${1##*.}"
	local filename="${1%.*}"
	local timestamp="$(date --utc '+%Y-%m-%d-%H%M%S')"
	printf "%s_%s.%s" "$filename" "$timestamp" "$extension"
}

get_markdown_link() {
	local link=""
	if [[ "$1" =~ \.html$ ]]; then
		link="[](file://$1)"
	else
		link="[]($1)"
	fi
	printf "%s" "$link"
}

main() {
	local root="$HOME/Wiki"
	local src="src"
	local root_file="2023-02-13-115716.md"
	
	if ! [[ -d "$root" && -d "$root/$src" && -f "$root/$root_file" ]]; then
	  die "One or more paths do not exist"
	fi

	if test -n "${1:-}"; then
		local file="$1"

		if ! test -f "$file"; then
			die "$file is not a file"
		fi

		local filename
		if is_timestamped "$file"; then
			filename="$(basename "$file")"
		else
			filename="$(basename "$(timestamp "$file")")"
		fi

		mv "$file" "$root/$src/$filename"

		print "$(get_markdown_link "$src/$filename")"
	else
		lvim "$root/$root_file"
	fi
}

main "$@"
